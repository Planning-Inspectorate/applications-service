parameters:
  - name: deployAPI
    displayName: Deploy API
    type: boolean
    default: true
  - name: deployWeb
    displayName: Deploy Web
    type: boolean
    default: true
  - name: deployBackOfficeSubscribers
    displayName: Deploy Back Office Subscriber Functions
    type: boolean
    default: true
  - name: schemaMigration
    displayName: Run Database Migration
    type: boolean
    default: false
  - name: region
    displayName: Region
    type: string
    values:
      - UK West
      - UK South
    default: UK West


pr: none
trigger: none

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: Planning-Inspectorate
      name: Planning-Inspectorate/common-pipeline-templates
      ref: refs/tags/release/3.24.0
  pipelines:
    - pipeline: build
      source: Applications Service Build
      trigger:
        branches:
          include:
            - main

extends:
  template: stages/wrapper_cd.yml@templates
  parameters:
    environments:
      - name: Dev
      - name: Test
        dependsOn:
          - Dev
      - name: Training
        dependsOn:
          - Test
      - name: Prod
        dependsOn:
          - Test
    automaticDeployments:
      environments:
        - name: Dev
        - name: Test
          dependsOn:
            - Dev
    deploymentStages:
      - name: Stage
        deploymentJobs:
          - name: Stage API
            condition: eq(${{ parameters.deployAPI }}, 'true')
            steps:
              - checkout: self
              # app name is different in the training env (had to be shorter)
              - bash: |
                  if [[ $ENVIRONMENT == "training" ]]; then
                    echo "Name: api"
                    echo "##vso[task.setvariable variable=appName;]api"
                  else
                    echo "Name: applications-api"
                    echo "##vso[task.setvariable variable=appName;]applications-api"
                  fi
                displayName: Set app name
                env:
                  ENVIRONMENT: $(ENVIRONMENT)
              - template: ../steps/azure_web_app_deploy_slot.yml
                parameters:
                  appName: pins-app-applications-service-$(appName)-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  appResourceGroup: $(resourceGroup)
                  slot: staging
                  azurecrName: $(azurecrName)
                  repository: applications-service/applications-service-api
              - template: ../steps/azure_web_app_verify_git_hash.yml
                parameters:
                  appName: Application service API
                  appUrl: $(deploySlotOutputs.slotUrl)/health
                  buildCommit: $(resources.pipeline.build.sourceCommit)
          - name: Stage Web
            condition: eq(${{ parameters.deployWeb }}, 'true')
            steps:
              - checkout: self
              # app name is different in the training env (had to be shorter)
              - bash: |
                  if [[ $ENVIRONMENT == "training" ]]; then
                    echo "Name: wfe"
                    echo "##vso[task.setvariable variable=appName;]wfe"
                  else
                    echo "Name: applications-wfe"
                    echo "##vso[task.setvariable variable=appName;]applications-wfe"
                  fi
                displayName: Set app name
                env:
                  ENVIRONMENT: $(ENVIRONMENT)
              - template: ../steps/azure_web_app_deploy_slot.yml
                parameters:
                  appName: pins-app-applications-service-$(appName)-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  appResourceGroup: $(resourceGroup)
                  slot: staging
                  azurecrName: $(azurecrName)
                  repository: applications-service/forms-web-app
              - template: ../steps/azure_web_app_verify_git_hash.yml
                parameters:
                  appName: Application service Web
                  appUrl: $(deploySlotOutputs.slotUrl)/health
                  buildCommit: $(resources.pipeline.build.sourceCommit)
                  appRegistrationClientId: $(appRegistrationClientId)
                  auth_enabled: 'true'
                  env: $(ENVIRONMENT)
      - name: Deploy
        dependsOn:
          - Stage
        deploymentJobs:
          - name: Database Migration
            condition: ${{ eq(parameters.schemaMigration, true) }}
            steps:
              - checkout: self
              - template: ../steps/azure_get_secrets.yml
                parameters:
                  keyVaultName: pinskvcommon$(ENVIRONMENT)$(REGION_SHORT)001
                  secrets:
                    - name: applications-service-sql-server-connection-string
                      variable: DATABASE_URL
              - template: ../steps/node_script.yml@templates
                parameters:
                  nodeVersion: 22
                  script: npm ci --workspace=@pins/applications-service-api
                  workingDirectory: $(Build.Repository.LocalPath)
              - ${{ if eq(parameters.schemaMigration, true) }}:
                  - template: ../steps/node_script.yml
                    parameters:
                      nodeVersion: 20
                      environmentVariables:
                        DATABASE_URL: $(DATABASE_URL)
                      script: npm run db:migrate:deploy --workspace=@pins/applications-service-api
                      workingDirectory: $(Build.Repository.LocalPath)/packages/applications-service-api
          - name: Deploy API
            condition: eq(${{ parameters.deployAPI }}, 'true')
            steps:
              - checkout: self
              # app name is different in the training env (had to be shorter)
              - bash: |
                  if [[ $ENVIRONMENT == "training" ]]; then
                    echo "Name: api"
                    echo "##vso[task.setvariable variable=appName;]api"
                  else
                    echo "Name: applications-api"
                    echo "##vso[task.setvariable variable=appName;]applications-api"
                  fi
                displayName: Set app name
                env:
                  ENVIRONMENT: $(ENVIRONMENT)
              - template: ../steps/azure_web_app_slot_swap.yml
                parameters:
                  appName: pins-app-applications-service-$(appName)-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  appResourceGroup: $(resourceGroup)
                  appStagingSlotName: staging
                  appTargetSlotName: production
              - template: ../steps/azure_web_app_verify_git_hash.yml
                parameters:
                  appName: Application service API
                  appUrl: https://pins-app-applications-service-$(appName)-$(ENVIRONMENT)-$(REGION_SHORT)-001.azurewebsites.net/health
                  buildCommit: $(resources.pipeline.build.sourceCommit)
          - name: Deploy Web
            condition: eq(${{ parameters.deployWeb }}, 'true')
            steps:
              - checkout: self
              # app name is different in the training env (had to be shorter)
              - bash: |
                  if [[ $ENVIRONMENT == "training" ]]; then
                    echo "Name: wfe"
                    echo "##vso[task.setvariable variable=appName;]wfe"
                  else
                    echo "Name: applications-wfe"
                    echo "##vso[task.setvariable variable=appName;]applications-wfe"
                  fi
                displayName: Set app name
                env:
                  ENVIRONMENT: $(ENVIRONMENT)
              - template: ../steps/azure_web_app_slot_swap.yml
                parameters:
                  appName: pins-app-applications-service-$(appName)-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  appResourceGroup: $(resourceGroup)
                  appStagingSlotName: staging
                  appTargetSlotName: production
              - template: ../steps/azure_web_app_verify_git_hash.yml
                parameters:
                  appName: Application service Web
                  appUrl: https://pins-app-applications-service-$(appName)-$(ENVIRONMENT)-$(REGION_SHORT)-001.azurewebsites.net/health
                  buildCommit: $(resources.pipeline.build.sourceCommit)
                  appRegistrationClientId: $(appRegistrationClientId)
                  auth_enabled: 'true'
                  env: $(ENVIRONMENT)
          - name: Deploy Back Office Subscriber Functions
            condition: eq(${{ parameters.deployBackOfficeSubscribers }}, 'true')
            steps:
              # app name is different in the training env (had to be shorter)
              - bash: |
                  if [[ $ENVIRONMENT == "training" ]]; then
                    echo "Name: bo-subs"
                    echo "##vso[task.setvariable variable=appName;]bo-subs"
                  else
                    echo "Name: bo-subscribers"
                    echo "##vso[task.setvariable variable=appName;]bo-subscribers"
                  fi
                displayName: Set app name
                env:
                  ENVIRONMENT: $(ENVIRONMENT)
              - download: build
                artifact: back-office-subscribers
                displayName: Download back-office-subscribers
              - template: ../steps/function_app_deploy.yml
                parameters:
                  appName: pins-func-applications-service-$(appName)-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  resourceGroup: $(resourceGroup)
                  workingDirectory: $(Pipeline.Workspace)/build/back-office-subscribers
    globalVariables:
      - template: azure-pipelines-variables.yml@self
