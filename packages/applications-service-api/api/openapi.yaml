openapi: 3.0.3
info:
  title: Applications Service API Documentation
  description: API to create, retrieve and modify planning applications
  version: 1.0.5
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'

servers:
  - url: '/'

paths:
  '/api/v1/applications/{caseReference}':
    get:
      summary: Returns an existing application
      description: Returns an existing application (Project) by id (Case Reference)
      tags:
        - Applications
      parameters:
        - in: path
          name: caseReference
          example: 'EN010116'
          required: true
          schema:
            type: string
            minLength: 8
            maxLength: 10
            pattern: '^[A-Za-z]{2}\d{6,8}$'
          description: Case / Project unique identifier
      responses:
        '200':
          description: Returns an application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '404':
          description: The application could not be found
        '406':
          description: Application not eligible

  '/api/v1/applications':
    get:
      summary: Returns all existing applications
      description: Returns all existing applications (Projects)
      tags:
        - Applications
      parameters:
        - in: query
          name: page
          example: 1
          required: false
          schema:
            type: integer
          description: Page number
        - in: query
          name: size
          example: 25
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
          description: Page size for results
        - in: query
          name: sort
          example: +ProjectName
          required: false
          schema:
            type: string
            enum:
              - +ProjectName
              - -ProjectName
              - ProjectName
              - +PromoterName
              - -PromoterName
              - PromoterName
              - +DateOfDCOSubmission
              - -DateOfDCOSubmission
              - DateOfDCOSubmission
              - +ConfirmedDateOfDecision
              - -ConfirmedDateOfDecision
              - ConfirmedDateOfDecision
              - +Stage
              - -Stage
              - Stage
        - in: query
          name: stage
          schema:
            type: array
            items:
              type: string
              enum:
                - pre_application
                - acceptance
                - pre_examination
                - examination
                - recommendation
                - decision
                - post_decision
                - withdrawn
        - in: query
          name: region
          schema:
            type: array
            items:
              type: string
              enum:
                - east_midlands
                - eastern
                - london
                - north_east
                - north_west
                - south_east
                - south_west
                - wales
                - west_midlands
                - yorkshire_and_the_humber
        - in: query
          name: sector
          schema:
            type: array
            items:
              type: string
              enum:
                - business_and_commercial
                - energy
                - transport
                - water
                - waste
                - waste_water
        - in: query
          name: searchTerm
          example: 'St James Barton'
          required: false
          schema:
            type: string
          description: Searches for project name and promoter name

      responses:
        '200':
          description: Returns all applications
          content:
            application/json:
              schema:
                type: object
                properties:
                  applications:
                    type: array
                    items:
                      $ref: '#/components/schemas/Application'
                  filters:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          enum:
                            - stage
                            - region
                            - sector
                          example: stage
                          description: Name of property to filter by
                        value:
                          oneOf:
                            - type: string
                            - type: number
                          example: 1
                          description: Value of property to filter by
                        label:
                          type: string
                          example: Pre-application
                          description: Display name for the filter value
                        count:
                          type: number
                          example: 5
                          description: Number of documents matching the filter
                  totalItems:
                    type: number
                    description: Count of items with provided filters applied
                    example: 1
                  itemsPerPage:
                    type: number
                    example: 1
                  totalPages:
                    type: number
                    example: 1
                  currentPage:
                    type: number
                    example: 1
                  totalItemsWithoutFilters:
                    type: number
                    description: Count of items with no filters applied
                    example: 10
        '404':
          description: No applications found

  '/api/v1/applications/download':
    get:
      summary: Returns a CSV file of all applications
      description: Returns a CSV file of all applications
      tags:
        - Applications
      responses:
        '200':
          description: Returns a CSV file of all applications
          content:
            text/csv:
              schema:
                type: string
                format: binary
                example: |
                  "Project reference","Project name","Applicant name","Application type","Region","Location","Grid reference - Easting","Grid reference - Northing:","GPS co-ordinates","Stage","Description","Anticipated submission date","Anticipated submission period","Date of application","Date application accepted","Date Examination started","Date Examination closed","Date of recommendation","Date of decision","Date withdrawn"
                  "TR010001","Accessibility Test","EDF","EN01 - Generating Stations","South West","Somerset - Monday PM 23/12",594934,5636170," -11.543792740342, 100.58954279911",4,"MC 5 09-01-2019 part 3","2020-01-01","","2018-01-01","2019-06-06",,,,,

        '404':
          description: No applications found


  '/api/v1/interested-party':
    post:
      summary: Creates an interested party
      description: Creates an interested party for a project
      tags:
        - Interested Party
      requestBody:
        description: Interested party details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterestedPartyReqBody'
            examples:
              me:
                summary: An example of a request body when submitting on own behalf
                value:
                  case_ref: 'EN010009'
                  behalf: 'me'
                  full-name: 'Humpty Dumpty'
                  over-18: 'yes'
                  address:
                    line1: 'Queens Building'
                    line2: 'Queens Wall Street'
                    line3: 'London'
                    postcode: 'HE127TY'
                    country: 'UK'
                  email: 'person@example.org'
                  telephone: '0132232432'
                  comment: 'this is my representation'
              organisation:
                summary: An example of a request body when submitting on behalf of an organisation
                value:
                  case_ref: 'EN010009'
                  behalf: 'them'
                  full-name: 'Mr Bean'
                  over-18: 'yes'
                  organisation-name: 'Ministry of Coffee and Social Affairs'
                  role: 'Coffee connoisseur'
                  address:
                    line1: 'Coffee Building'
                    line2: 'Coffee Wall Street'
                    line3: 'London'
                    postcode: 'CO127FE'
                    country: 'UK'
                  email: 'person@example.org'
                  telephone: '0132232432'
                  comment: 'this is my representation'
              agent:
                summary: An example of a request body when submitting on behalf of an agent
                value:
                  case_ref: 'EN010009'
                  behalf: 'you'
                  representing: 'person|organisation|family'
                  representee:
                    full-name: 'Harry Potter'
                    over-18: 'yes'
                    address:
                      line1: '4'
                      line2: 'Privet Drive'
                      line3: 'Little Whinging'
                      postcode: 'RG12 9FG'
                      country: 'UK'
                    email: 'person@example.org'
                    telephone: '0132232432'
                  representor:
                    full-name: 'Hermione Granger'
                    over-18: 'yes'
                    address:
                      line1: '95'
                      line2: 'Boar Lane'
                      line3: 'Sellack'
                      postcode: 'HR9 6LR'
                      country: 'UK'
                    email: 'elvin.ali@planninginspectorate.gov.uk'
                    telephone: '0137732432'
                    organisation-name: 'Hogwarts School of Witchcraft and Wizardry'
                  comment: 'this is my representation'
        required: true
      responses:
        '201':
          description: Returns the ID ( sometimes called web reference, not to be confused with web_ref in db ) of the newly created interested party
          content:
            application/json:
              schema:
                type: object
                properties:
                  referenceId:
                    type: string
                    example: '30000001'

  '/api/v1/interested-party/{token}':
    post:
      deprecated: true
      summary: Retrieves an interested party by token
      description: Retrieves an interested party by token and returns the interested party details if email provided in body matches retrieved party's email
      tags:
        - Interested Party
      parameters:
        - in: path
          name: token
          example: 'b03bee6bd65cf4d770ee4d8712d4eaef9b78d50a970b51e1'
          required: true
          schema:
            type: string
          description: Encrypted interested party ID
      requestBody:
        description: Interested party email
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      responses:
        '200':
          description: Returns an interested party
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestedParty'
        '404':
          description: Interested party could not be found

  '/api/v1/interested-party/{ID}/comments':
    put:
      deprecated: true
      summary: Persist interested party's comments
      description: Persist interested party's comments
      tags:
        - Interested Party
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            type: integer
            example: 30000120
          description: Unique identifier
      requestBody:
        description: Interested party comments
        content:
          application/json:
            schema:
              type: object
              properties:
                mode:
                  type: string
                  enum:
                    - draft
                    - final
                  example: 'draft'
                comments:
                  type: string
                  example: 'I dont like traffic'
      responses:
        '200':
          description: Comments updated successfully
        '400':
          description: Comments not updated

  '/api/v1/documents/{caseRef}':
    post:
      deprecated: true
      summary: Returns project documents
      description: Returns project documents
      tags:
        - Documents
      parameters:
        - in: path
          name: caseRef
          example: 'TR040009'
          required: true
          schema:
            type: string
          description: Case reference
      requestBody:
        description: Search and filtering criteria, required page number
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSearchCriteria'
        required: true
      responses:
        '200':
          description: Returns list of documents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentListWrapper'
        '404':
          description: No document found

  '/api/v2/documents':
    get:
      deprecated: true
      summary: Returns project documents
      description: Returns project documents
      tags:
        - Documents
      parameters:
        - in: query
          name: caseRef
          example: 'TR040009'
          required: true
          schema:
            type: string
          description: Case reference
        - in: query
          name: page
          example: 1
          required: false
          schema:
            type: integer
          description: Page number
        - in: query
          name: searchTerm
          example: 'pdf'
          required: false
          schema:
            type: string
          description: Search term
        - in: query
          name: stage
          required: false
          schema:
            type: array
            items:
              type: integer
          description: Stage
        - in: query
          name: type
          required: false
          schema:
            type: array
            items:
              type: string
          description: Type
      responses:
        '200':
          description: Returns list of documents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentListWrapper'
        '400':
          description: Request body validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '404':
          description: No documents found

  '/api/v3/documents/{caseReference}':
    get:
      summary: Returns project document
      description: Returns project document
      tags:
        - Documents
      parameters:
        - in: path
          name: caseReference
          example: 'TR040009'
          required: true
          schema:
            type: string
          description: Case reference
        - in: query
          name: type
          required: true
          description: Type of document
          schema:
            type: string
            enum: [
              'RULE_6_LETTER',
              'RULE_8_LETTER',
              'EXAMINATION_LIBRARY',
              'DECISION_LETTER_APPROVE',
              'DECISION_LETTER_REFUSE'
            ]
      responses:
        '200':
          description: Returns a document
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentV3'
        '404':
          description: No documents found

  '/api/v3/documents':
    post:
      summary: Returns project documents
      description: Returns project documents
      tags:
        - Documents
      requestBody:
        description: Search and filtering criteria, required page number
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentV3RequestBody'
      responses:
        '200':
          description: Returns list of documents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentV3ResponseBody'
        '400':
          description: Request body validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  '/api/v1/project-updates/{caseReference}':
    get:
      summary: Returns project updates for a case
      description: Returns project updates for a case
      tags:
        - Project Updates
      parameters:
        - in: path
          name: caseReference
          example: EN020021
          required: true
          schema:
            type: string
            minLength: 8
            maxLength: 10
            pattern: '^[A-Za-z]{2}\d{6,8}$'
          description: Case / Project unique identifier
      responses:
        '200':
          description: list of project updates
          content:
            application/json:
              schema:
                type: object
                properties:
                  updates:
                    type: array
                    items:
                      type: object
                      properties:
                        updateDate:
                          type: string
                          example: "2020-02-19"
                        updateName:
                          type: string
                          example: "Project accepted"
                        updateContentEnglish:
                          type: string
                          example: "Case was accepted"
                        updateContentWelsh:
                          type: string
                          example: "Derbyniwyd yr achos"
        '404':
          description: Case not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Internal server error

  '/api/v1/representations':
    get:
      summary: Returns project representations
      description: Returns project representations
      tags:
        - Representations
      parameters:
        - in: query
          name: applicationId
          example: 'EN010009'
          required: true
          schema:
            type: string
          description: Case reference
        - in: query
          name: page
          example: 1
          required: false
          schema:
            type: integer
          description: Page number
        - in: query
          name: size
          example: 25
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
          description: Page size for results
        - in: query
          name: searchTerm
          example: 'Frosty'
          required: false
          schema:
            type: string
          description: Search term
        - in: query
          name: type
          required: false
          schema:
            type: array
            items:
              type: string
          description: Type
      responses:
        '200':
          description: Returns list of representations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepresentationListWrapper'
        '404':
          description: No representations found

  '/api/v1/representations/{id}':
    get:
      summary: Returns representation by id
      description: Returns representation by id
      tags:
        - Representations
      parameters:
        - in: path
          name: id
          example: 10
          required: true
          schema:
            type: integer
          description: Representation id
      responses:
        '200':
          description: Returns a representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Representation'
        '404':
          description: Representation not found

  '/api/v1/timetables/{caseReference}':
    get:
      summary: Returns timetable data for a case
      tags:
        - Timetables
      parameters:
        - in: path
          name: caseReference
          example: EN020021
          required: true
          schema:
            type: string
            minLength: 8
            maxLength: 10
            pattern: '^[A-Za-z]{2}\d{6,8}$'
          description: Case / Project unique identifier
      responses:
        '200':
          description: List of timetables for a case
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timetables'
        '400':
          description: Bad Request error
        '404':
          description: Not found error
        '500':
          description: Internal server error

  '/api/v1/submissions/{caseReference}':
    post:
      summary: Create a submission for a case
      tags:
        - Submissions
      parameters:
        - in: path
          name: caseReference
          example: EN020021
          required: true
          schema:
            type: string
            minLength: 8
            maxLength: 10
            pattern: '^[A-Za-z]{2}\d{6,8}$'
          description: Case / Project unique identifier
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubmissionCreateRequestBody'
      responses:
        '201':
          description: Submission data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionResponseBody'
        '400':
          description: Request body validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal server error

  '/api/v1/submissions/{submissionId}/complete':
    post:
      summary: Mark a submission as complete
      tags:
        - Submissions
      parameters:
        - in: path
          name: submissionId
          example: 1234
          required: true
          schema:
            oneOf:
              - type: string
              - type: number
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                caseReference:
                  type: string
                  minLength: 8
                  maxLength: 10
                  pattern: '^[A-Za-z]{2}\d{6,8}$'
                  example: 'EN010116'
                  description: Case / Project unique identifier
                email:
                  type: string
                  example: 'person@example.org'
      responses:
        '204':
          description: Request was successful
        '400':
          description: Request body validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '404':
          description: Submission with given ID not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Internal server error

  '/api/v1/subscriptions/{caseReference}':
    post:
      description: Creates an email update subscription
      tags:
        - Subscription
      parameters:
        - in: path
          name: caseReference
          example: 'EN010116'
          required: true
          schema:
            type: string
            minLength: 8
            maxLength: 10
            pattern: '^[A-Za-z]{2}\d{6,8}$'
          description: Case / Project unique identifier
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - subscriptionTypes
              properties:
                email:
                  type: string
                  format: email
                subscriptionTypes:
                  type: array
                  items:
                    type: string
                    enum:
                      - allUpdates
                      - applicationSubmitted
                      - applicationDecided
                      - registrationOpen
      responses:
        '200':
          description: Successfully created subscription
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscriptionDetails:
                    type: string
                    description: encrypted string containing subscription details
                    example: 60492abe2c6eed5eb43695f8eda5a14a57a44178d28c641772db0723685b4501
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '404':
          description: Case not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Internal server error
    put:
      description: Confirms an email update subscription
      tags:
        - Subscription
      parameters:
        - in: path
          name: caseReference
          example: 'EN010116'
          required: true
          schema:
            type: string
            minLength: 8
            maxLength: 10
            pattern: '^[A-Za-z]{2}\d{6,8}$'
          description: Case / Project unique identifier
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - subscriptionDetails
              properties:
                subscriptionDetails:
                  type: string
                  description: encrypted string containing 'email', 'subscriptionTypes' and 'date'
      responses:
        '204':
          description: Successfully confirmed subscription
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '404':
          description: Case not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Internal server error
    delete:
      description: Delete an email update subscription
      tags:
        - Subscription
      parameters:
        - in: path
          name: caseReference
          example: 'EN010116'
          required: true
          schema:
            type: string
            minLength: 8
            maxLength: 10
            pattern: '^[A-Za-z]{2}\d{6,8}$'
          description: Case / Project unique identifier
        - in: query
          name: email
          required: true
          schema:
            type: string
            description: encrypted string of email address
      responses:
        '204':
          description: Successfully deleted subscription
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '404':
          description: Case not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Internal server error

  '/api/v1/advice':
    get:
      summary: Returns project advice
      description: Returns project advice ordered by date advice given
      tags:
        - Advice
      parameters:
        - in: query
          name: caseRef
          example: 'TR040009'
          required: true
          schema:
            type: string
          description: Case reference
        - in: query
          name: page
          example: 1
          required: false
          schema:
            type: integer
          description: Page number
        - in: query
          name: size
          example: 50
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
          description: Page size for results
        - in: query
          name: searchTerm
          example: 'pdf'
          required: false
          schema:
            type: string
          description: Search term
      responses:
        '200':
          description: Returns list of advice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdviceListWrapper'
        '400':
          description: Invalid parameter values
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal server error

  '/api/v1/advice/{adviceID}':
    get:
      summary: Returns project advice item
      description: Returns project advice resource
      tags:
        - Advice
      parameters:
        - in: path
          name: adviceID
          example: 'TR040009-Advice-00009'
          required: true
          schema:
            type: string
        - in: query
          name: caseReference
          example: TR040009
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns advice resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdviceWithAttachments'
        '400':
          description: Invalid parameter values
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal server error

  '/test':
    get:
      summary: Returns a list of log messages relating to database connectivity.
      tags:
        - Misc
      responses:
        '200':
          description: A JSON array of log messages
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '500':
          description: Something went wrong.
        default:
          description: Something went wrong.

components:
  schemas:
    Application:
      type: object
      properties:
        CaseReference:
          type: string
          example: 'EN010009'
        ProjectName:
          type: string
          example: 'St James Barton Giant Wind Turbine'
        Proposal:
          type: string
          example: 'EN01 - Generating Stations'
        Summary:
          type: string
          example: 'The Project consists of an Energy Recovery Facility (ERF) converting up to 650,000 tonnes per annum ...'
        Stage:
          type: integer
          example: 3
        PromoterName:
          type: string
          example: 'Horizon Dev Environment DJW'
        PromoterFirstName:
          type: string
          example: 'Postman'
        PromoterLastName:
          type: string
          example: 'Pat'
        ApplicantEmailAddress:
          type: string
          example: 'person@example.org'
        ApplicantPhoneNumber:
          type: string
          example: '1234'
        WebAddress:
          type: string
          example: ''
        ProjectEmailAddress:
          type: string
          example: 'project@example.org'
        Region:
          type: string
          example: 'Wales'
        ProjectLocation:
          type: string
          example: 'St James Barton, BRISTOL THU 16 JAN'
        AnticipatedGridRefEasting:
          type: number
          example: 347128
        AnticipatedGridRefNorthing:
          type: number
          example: 176491
        MapZoomLevel:
          type: number
          example: 7
        LongLat:
          type: array
          items:
            type: string
            example: [ '-0.70283147423378', '53.620078025496' ]
        AnticipatedDateOfSubmission:
          type: string
          example: ''
        AnticipatedSubmissionDateNonSpecific:
          type: string
          example: 'Longâ€” â€“dash'
        DateOfDCOSubmission:
          type: string
          example: '2015-12-10'
        DateOfDCOAcceptance_NonAcceptance:
          type: string
          example: ''
        DateOfPreliminaryMeeting:
          type: string
          example: ''
        ConfirmedStartOfExamination:
          type: string
          example: ''
        DateTimeExaminationEnds:
          type: string
          example: ''
        DateOfRepresentationPeriodOpen:
          type: string
          example: '2017-02-14'
        DateOfRelevantRepresentationClose:
          type: string
          example: '2018-08-01'
        DateRRepAppearOnWebsite:
          type: string
          example: '2017-08-01'
        Stage4ExtensiontoExamCloseDate:
          type: string
          example: ''
        stage5ExtensionToRecommendationDeadline:
          type: string
          example: ''
        Stage5ExtensiontoDecisionDeadline:
          type: string
          example: ''
        DateOfRecommendations:
          type: string
          example: ''
        ConfirmedDateOfDecision:
          type: string
          example: ''
        DateProjectWithdrawn:
          type: string
          example: ''
        sourceSystem:
          type: string
          example: 'HORIZON'
        dateOfNonAcceptance:
          type: string
          example: ''

    InterestedParty:
      type: object
      properties:
        ID:
          type: number
          example: 30000120
        caseref:
          type: string
          example: 'EN010009'
        behalf:
          type: string
          example: 'me'
        mename:
          type: string
          example: 'David White'
        mebuild:
          type: string
          example: 'Temple Quay'
        mestreet:
          type: string
          example: ''
        metown:
          type: string
          example: 'BRISTOL'
        mecounty:
          type: string
          example: ''
        mecode:
          type: string
          example: 'BS1 6PN'
        mecountry:
          type: string
          example: 'United Kingdom'
        memail:
          type: string
          example: 'person@example.org'
        mephone:
          type: string
          example: '0303 111 111'
        orgname:
          type: string
          example: ''
        contactName:
          type: string
          example: ''
        contactJob:
          type: string
          example: ''
        orgbuild:
          type: string
          example: ''
        orgstreet:
          type: string
          example: ''
        orgtown:
          type: string
          example: ''
        orgcounty:
          type: string
          example: ''
        orgcode:
          type: string
          example: ''
        orgcountry:
          type: string
          example: ''
        orgmail:
          type: string
          example: ''
        orgphone:
          type: string
          example: ''
        youname:
          type: string
          example: ''
        youbuild:
          type: string
          example: ''
        youstreet:
          type: string
          example: ''
        youtown:
          type: string
          example: ''
        youcounty:
          type: string
          example: ''
        youcode:
          type: string
          example: ''
        youcountry:
          type: string
          example: ''
        youmail:
          type: string
          example: ''
        youphone:
          type: string
          example: ''
        agname:
          type: string
          example: ''
        agorgname:
          type: string
          example: ''
        agbuild:
          type: string
          example: ''
        agstreet:
          type: string
          example: ''
        agtown:
          type: string
          example: ''
        agcounty:
          type: string
          example: ''
        agcode:
          type: string
          example: ''
        agcountry:
          type: string
          example: ''
        agmail:
          type: string
          example: ''
        agphone:
          type: string
          example: ''
        therep:
          type: string
          example: 'this is my test that form unchanged for non material change projects after ACR051 developed.  Jun 2021'
        validated:
          type: string
          format: date
          example: '2021-06-22T14:45:46.000Z'
        emailed:
          type: string
          format: date
          example: '2021-06-22T14:45:46.000Z'
        exported:
          type: string
          format: date
        web_ref:
          type: number
          example: 1
      description: All of the data and state information for an interested party

    InterestedPartyReqBody:
      type: object
      properties:
        case_ref:
          type: string
        behalf:
          type: string
        full-name:
          type: string
        over-18:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        email:
          type: string
        telephone:
          type: string
        comment:
          type: string

    DocumentSearchCriteria:
      type: object
      properties:
        pageNo:
          type: number
          example: 1
        searchTerm:
          type: string
          example: ''

    DocumentListWrapper:
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentListGroupByStage'
        totalItems:
          type: number
          example: 3
        itemsPerPage:
          type: number
          example: 20
        totalPages:
          type: number
          example: 1
        currentPage:
          type: number
          example: 1
        filters:
          $ref: '#/components/schemas/Filters'

    DocumentListGroupByStage:
      type: object
      additionalProperties:
        # x-additionalPropertiesName: group
        $ref: '#/components/schemas/DocumentListGroupByType'

    DocumentListGroupByType:
      type: object
      additionalProperties:
        # x-additionalPropertiesName: group
        type: array
        items:
          $ref: '#/components/schemas/Document'

    DocumentV3RequestBody:
      type: object
      required:
        - caseReference
      properties:
        caseReference:
          type: string
          example: TR040009
        searchTerm:
          type: string
          description: Free text search term
        page:
          type: integer
          description: Page number
          example: 1
        size:
          type: integer
          description: Page Size (items per page)
          example: 25
          minimum: 1
          maximum: 100
        filters:
          type: array
          items:
            $ref: '#/components/schemas/DocumentV3RequestFilter'
        datePublishedFrom:
          type: string
          format: date
          description: Filter for documents published on or after {value}
          example: '2000-01-01'
        datePublishedTo:
          type: string
          format: date
          description: Filter for documents published on or before {value}
          example: '2023-12-31'

    DocumentV3RequestFilter:
      required:
        - name
        - value
      properties:
        name:
          type: string
          enum: [ stage, category ]
          example: stage
          description: Name of property to filter by
        value:
          example: 1
          description: Value of property to filter by
        type:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
                example: Plans

    DocumentV3ResponseBody:
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentV3'
        totalItems:
          type: number
          example: 3
        itemsPerPage:
          type: number
          example: 20
        totalPages:
          type: number
          example: 1
        currentPage:
          type: number
          example: 1
        filters:
          type: array
          items:
            $ref: '#/components/schemas/DocumentV3ResponseFilter'

    DocumentV3ResponseFilter:
      type: object
      properties:
        name:
          type: string
          enum: [ stage, category ]
          example: stage
          description: Name of property to filter by
        value:
          type: string
          example: 1
          description: Value of property to filter by
        label:
          type: string
          example: Pre-application
          description: Display name for the filter value
        count:
          type: number
          example: 5
          description: Number of documents matching the filter
        type:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
                example: Plans
              count:
                type: number
                example: 5
                description: Number of documents matching the type

    DocumentV3:
      type: object
      properties:
        id:
          type: number
          example: 12601
        dataId:
          type: string
          example: 'TR040009-000004'
        caseReference:
          type: string
          example: 'TR040009'
        stage:
          type: number
          example: 1
        type:
          type: string
          example: 'Transboundary'
        filter1:
          type: string
          example: 'Environmental Impact Assessment'
        filter2:
          type: string
          example: ''
        category:
          type: string
          example: ''
        description:
          type: string
          example: ''
        size:
          type: number
          example: 50427
        mime:
          type: string
          example: 'application/pdf'
        path:
          type: string
          example: 'TR040009/TR040009-000004-Regulation 24 Transboundary Screening document.pdf'
        status:
          type: string
          example: 'Published'
        datePublished:
          type: string
          example: '2015-06-10'
        deadlineDate:
          type: string
          example: ''
        personalName:
          type: string
          example: ''
        representative:
          type: string
          example: ''
        whoFrom:
          type: number
          example: null
        docReference:
          type: string
          example: ''
        author:
          type: string
          example: ''
        details:
          type: string
          example: ''
        lastModified:
          type: string
          example: '2016-04-28 08:42:58'
        dateCreated:
          type: string
          example: '2016-04-28 08:42:58'

    Document:
      type: object
      properties:
        id:
          type: number
          example: 12601
        dataID:
          type: string
          example: 'TR040009-000004'
        case_reference:
          type: string
          example: 'TR040009'
        Stage:
          type: number
          example: 1
        type:
          type: string
          example: 'Transboundary'
        filter_1:
          type: string
          example: 'Environmental Impact Assessment'
        filter_2:
          type: string
          example: ''
        category:
          type: string
          example: ''
        description:
          type: string
          example: ''
        size:
          type: number
          example: 50427
        mime:
          type: string
          example: 'application/pdf'
        path:
          type: string
          example: 'TR040009/TR040009-000004-Regulation 24 Transboundary Screening document.pdf'
        status:
          type: string
          example: 'Published'
        date_published:
          type: string
          example: '2015-06-10'
        deadline_date:
          type: string
          example: ''
        personal_name:
          type: string
          example: ''
        representative:
          type: string
          example: ''
        who_from:
          type: number
          example: null
        doc_reference:
          type: string
          example: ''
        author:
          type: string
          example: ''
        details:
          type: string
          example: ''
        last_modified:
          type: string
          example: '2016-04-28 08:42:58'
        date_created:
          type: string
          example: '2016-04-28 08:42:58'

    Address:
      type: object
      properties:
        line1:
          type: string
        line2:
          type: string
        line3:
          type: string
        postcode:
          type: string
        country:
          type: string
          example: 'UK'

    Email:
      type: object
      properties:
        email:
          type: string
          example: 'person@example.org'

    Filters:
      type: object
      properties:
        stageFilters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
        typeFilters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'

    Filter:
      type: object
      properties:
        name:
          type: string
        count:
          type: number

    Representation:
      type: object
      properties:
        ID:
          type: number
          example: 2
        ProjectName:
          type: string
          example: 'SPT Feb 2020'
        CaseReference:
          type: string
          example: 'EN010009'
        DataID:
          type: number
          example: null
        UniqueReference:
          type: string
          example: 'WS010006-34601'
        WebReference:
          type: number
          example: null
        PersonalName:
          type: string
          example: 'Test (Test)'
        Representative:
          type: string
          example: null
        IndvdlOnBhalfName:
          type: string
          example: null
        OrgOnBhalfName:
          type: string
          example: null
        AgentOrgOnBhalfContactName:
          type: string
          example: null
        RepFrom:
          type: string
          example: 'Members of the Public/Businesses'
        InterestInLand:
          type: string
          example: null
        SpecifyOther:
          type: string
          example: null
        CompulsoryAcquisitionHearing:
          type: string
          example: null
        RepresentationOriginal:
          type: string
          example: null
        RepresentationRedacted:
          type: string
          example: 'Some comments'
        RelevantOrNot:
          type: string
          example: null
        SubmitFurtherWrittenReps:
          type: string
          example: null
        PreliminaryMeeting:
          type: string
          example: null
        OpenFloorHearings:
          type: string
          example: null
        IssuesSpecificHearings:
          type: string
          example: null
        DateRrepReceived:
          type: string
          format: date
          example: '2020-02-19T00:00:00.000Z'
        DoNotPublish:
          type: string
          example: null
        Attachments:
          type: string
          example: 'WS010006-000002'

    RepresentationListWrapper:
      type: object
      properties:
        representations:
          type: array
          items:
            $ref: '#/components/schemas/Representation'
        totalItems:
          type: number
          example: 3
        itemsPerPage:
          type: number
          example: 20
        totalPages:
          type: number
          example: 1
        currentPage:
          type: number
          example: 1
        filters:
          $ref: '#/components/schemas/RepFilters'

    RepFilters:
      type: object
      properties:
        typeFilters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'

    Timetable:
      type: object
      properties:
        id:
          type: integer
          example: 1
        uniqueId:
          type: string
          example: "WS010006-34601"
        caseReference:
          type: string
          example: "EN010009"
        title:
          type: string
          example: "Deadline 1A"
        description:
          type: string
          example: "The ExA is under a duty to complete the Examination of the application by the end of the period of six months"
        dateOfEvent:
          type: string
          example: "2020-02-19 11:21:42"
        timetableType:
          type: string
          example: "Exams"
        typeOfEvent:
          type: string
          example: "Deadline"
        dateTimeDeadlineStart:
          type: string
          example: "2020-05-16 15:44:52"
        sourceSystem:
          type: string
          example: "Horizon"

    Timetables:
      type: object
      properties:
        timetables:
          type: array
          items:
            $ref: '#/components/schemas/Timetable'
        totalItems:
          type: number
          example: 100
        itemsPerPage:
          type: number
          example: 100
        totalPages:
          type: number
          example: 1
        currentPage:
          type: number
          example: 1

    SubmissionCreateRequestBody:
      properties:
        file:
          type: string
          description: File object to be uploaded. **Required unless submission is a comment**
          format: binary
      allOf:
        - $ref: '#/components/schemas/SubmissionProperties'
      required:
        - name
        - email
        - interestedParty
        - deadline
        - submissionType

    SubmissionResponseBody:
      properties:
        submissionId:
          oneOf:
            - type: string
            - type: number
          description: Unique ID for the submission
          example: 10809

    SubmissionProperties:
      type: object
      properties:
        name:
          type: string
          example: Joe Bloggs
        email:
          type: string
          example: person@example.org
        interestedParty:
          type: boolean
          description: Is submission on behalf of an interested party
          example: true
        ipReference:
          type: string
          description: Interested party reference number
          example: 3287498209
        deadline:
          type: string
          description: Name/title of Deadline
          example: Deadline 3
        submissionType:
          type: string
          example: Navigation Document/Guide to the application
        sensitiveData:
          type: boolean
          description: Does submission contain sensitive data
          example: true
        lateSubmission:
          type: boolean
          description: Is this a late submission
          example: false
        submissionId:
          oneOf:
            - type: string
            - type: number
          description: Unique ID for the submission
          example: 10809
        representation:
          type: string
          description: Comment text. **Required if submission is a comment**
          maxLength: 65234
          example: This is my representation

    AdviceListWrapper:
      type: object
      properties:
        advice:
          type: array
          items:
            $ref: '#/components/schemas/Advice'
        totalItems:
          type: number
          example: 1
        itemsPerPage:
          type: number
          example: 25
        totalPages:
          type: number
          example: 1
        currentPage:
          type: number
          example: 1

    Advice:
      type: object
      properties:
        adviceID:
          type: string
          example: 'XX0123-Advice-00001'
        enquiryDate:
          type: string
          format: date
          example: '2020-02-19'
        enquiryMethod:
          type: string
          example: 'Email'
        industrySector:
          type: string
          example: 'Energy'
        caseReference:
          type: string
          example: 'EN010009'
        firstName:
          type: string
          example: 'Joe'
        lastName:
          type: string
          example: 'Bloggs'
        organisation:
          type: string
          example: 'The organisation'
        enquiryDetail:
          type: string
          example: 'Do we need more energy'
        adviceGiven:
          type: string
          example: 'Yes we do'
        respondedBy:
          type: string
          example: 'Joe Bloggs'
        section51Enquiry:
          type: boolean
          example: true
        initiatedDate:
          type: string
          format: date
          example: '2016-04-28'
        dateEnquiryReceived:
          type: string
          format: date-time
          example: '2016-04-28 08:42:58'
        dateAdviceGiven:
          type: string
          format: date
          example: '2016-04-28'
        dateLastModified:
          type: string
          format: date-time
          example: '2016-04-28 08:42:58'
        dateCreated:
          type: string
          format: date-time
          example: '2016-04-28 08:42:58'

    Attachment:
      type: object
      properties:
        documentDataID:
          type: string
          example: 'XX0123-EN024303-00001'
        documentURI:
          type: string
          example: '/pathname/to/document/or/blob/uri'
        mime:
          type: string
          example: 'application/pdf'
        size:
          type: number
          example: 50427

    AdviceWithAttachments:
      allOf:
        - $ref: '#/components/schemas/Advice'
      properties:
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'

    ValidationError:
      type: object
      properties:
        code:
          type: integer
          example: 400
        errors:
          type: array
          items:
            type: string
            example: Missing property 'x'

    NotFoundError:
      type: object
      properties:
        code:
          type: integer
          example: 404
        errors:
          type: array
          items:
            type: string
            example: "{entityName} not found"
