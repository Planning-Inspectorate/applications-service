{% extends "layouts/default.njk" %}

{% from "govuk/components/button/macro.njk" import govukButton %},
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/fieldset/macro.njk" import govukFieldset %}

{% set pageHeading = t('register.theirAddress.pageHeading') %}
{% set whoRegisteringFor = t('register.whoRegisteringFor.agent') %}
{% set commonPageTitle = t('register.index.pageTitle') %}
{% set title = pageHeading + ' - ' + whoRegisteringFor + ' - ' + commonPageTitle %}

{% block pageTitle %}
  {% if errors %}
    {% set title = t('common.error') + ": " + title %}
  {% endif %}
  {{ title }}
{% endblock %}

{% block content %}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      {% if errorSummary %}
        {{ govukErrorSummary({
          titleText: t('common.thereIsAProblem'),
          errorList: errorSummary
        }) }}
      {% endif %}

      <form method="POST" novalidate>
        <div class="govuk-form-group">

          {% call govukFieldset({
            legend: {
              text: pageHeading,
              classes: "govuk-fieldset__legend--l",
              isPageHeading: true
            }
          }) %}
          <p class="govuk-hint">{{ t('register.theirAddress.hint') }}</p>

          {{ govukInput({
              label: {
                html: t('register.theirAddress.line1')
              },
              classes: "{{ 'govuk-form-group--error' if errors }}",
              id: "line1",
              name: "line1",
							autocomplete: 'address-line1',
              value: address['line1'] or errors['line1'].value,
              errorMessage: errors['line1'] and {
                text: errors['line1'].msg
              }
            }) }}

          {{ govukInput({
              label: {
                html: t('register.theirAddress.line2')
              },
              classes: "{{ 'govuk-form-group--error' if errors }}",
              id: "line2",
              name: "line2",
							autocomplete: 'address-line2',
              value:  address['line2'] or errors['line2'].value,
              errorMessage: errors['line2'] and {
                text: errors['line2'].msg
              }
            }) }}

          {{ govukInput({
              label: {
                html: t('register.theirAddress.line3')
              },
              classes: "govuk-!-width-two-thirds {{ 'govuk-form-group--error' if errors }}",
              id: "line3",
              name: "line3",
							autocomplete: 'address-line3',
              value: address['line3'] or errors['line3'].value,
              errorMessage: errors['line3'] and {
                text: errors['line3'].msg
              }
            }) }}

          {{ govukInput({
              label: {
                text: t('register.theirAddress.postcode')
              },
              classes: "govuk-input--width-10 {{ 'govuk-form-group--error' if errors }}",
              id: "postcode",
              name: "postcode",
							autocomplete: "postal-code",
              value: address['postcode'] or errors['postcode'].value,
              errorMessage: errors['postcode'] and {
                text: errors['postcode'].msg
              }
            }) }}

          {{ govukInput({
              label: {
                text: t('register.theirAddress.country')
              },
              classes: "govuk-!-width-two-thirds {{ 'govuk-form-group--error' if errors }}",
              id: "country",
              name: "country",
							autocomplete: 'country',
              value: address['country'] or errors['country'].value,
              errorMessage: errors['country'] and {
                text: errors['country'].msg
              }
            }) }}

          {% endcall %}
        </div>

        {{ govukButton({
          text: t('common.continue'),
          type: "Submit",
          attributes: { "data-cy":"button-save-and-continue"}
        }) }}

      </form>
    </div>
  </div>

{% endblock %}
