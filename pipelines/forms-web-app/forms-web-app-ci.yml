trigger:
  paths:
    include:
      - packages/forms-web-app

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: Applications Token
      name: Planning-Inspectorate/common-pipeline-templates
      ref: feature/terraform-rename-azure-cli-step

pool:
  vmImage: ubuntu-latest

extends:
  template: stages/wrapper_ci.yml@templates
  parameters:
    globalVariables:
      - template: pipelines/forms-web-app/variables.yml@self
      - template: pipelines/variables.yml@self
    validateName: Build and Push
    validationSteps:
      - script: |
          buildName=$(versionNumber)_$(Build.BuildId)
          echo "Setting the name of the build to '$buildName'."
          echo "##vso[build.updatebuildnumber]$buildName"
          echo "##vso[build.addbuildtag]$(versionNumber)"
          echo "##vso[build.addbuildtag]${{ replace(replace(variables['Build.SourceBranch'], 'refs/heads/', ''), '/', '.') }}"
        displayName: Set Build Number and Tags
      - task: AzureCLI@2
        displayName: Build and Push Docker Image to ACR
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az acr login --name $(azureContainerRegistryName)

            docker build . \
            -f $(Build.Repository.LocalPath)/pipelines/forms-web-app/Dockerfile \
            -t $(azureContainerRegistryName).azurecr.io/$(repository):$(versionNumber) \
            -t $(azureContainerRegistryName).azurecr.io/$(repository):${{ replace(replace(variables['Build.SourceBranch'], 'refs/heads/', ''), '/', '.') }} \
            --build-arg APP_NAME=applications-forms-web-app \
            --build-arg BUILD_ID=$(Build.BuildNumber) \
            --build-arg VERSION=$(versionNumber)

            docker push -a $(azureContainerRegistryName).azurecr.io/$(repository)
            docker save $(azureContainerRegistryName).azurecr.io/$(repository):$(versionNumber) -o $(Build.ArtifactStagingDirectory)/image.tar
          workingDirectory: $(Build.Repository.LocalPath)/packages/forms-web-app
      - publish: $(Build.ArtifactStagingDirectory)
        artifact: docker-image
        displayName: Publish Docker image as artifact
